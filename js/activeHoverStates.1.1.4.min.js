/*Active Hover States 1.1.4 - http://github.com/ttbarnes/Active-Hover-States*/
!function(e){var t={init:function(t){if(navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)){var i=e("head").children('meta[name="viewport"]');jQuery(window).bind("orientationchange",function(){90==window.orientation||-90==window.orientation||270==window.orientation?i.attr("content","height=device-width,width=device-height,initial-scale=1.0,maximum-scale=1.0"):i.attr("content","height=device-height,width=device-width,initial-scale=1.0,maximum-scale=1.0")}).trigger("orientationchange")}var n=e.extend({selectors:{target:"div.activeHoverStates"},fadeIn:!0,oddEven:!0,parentBgColourChange:!0,prevAllClasses:!0},t);return this.each(function(){function t(){jQuery(o).each(function(){jQuery(this).find("div:odd,li:odd").addClass("odd"),jQuery(this).find("div:even,li:even").addClass("even")})}if(jQuery(this).children("div, li").length>0){var i=jQuery(this).parent().parent(),o=jQuery(this),s=jQuery(this).children("div,li");1==n.fadeIn&&o.hide().fadeIn("slow"),1==n.oddEven&&t(),jQuery(s).each(function(){jQuery(this).hover(function(){1==n.parentBgColourChange&&(i.addClass("activeHovering"),jQuery(s).not(this).addClass("active")),jQuery(s).not(this).addClass("active"),elmHover=e(this),elmHover.addClass("hovered"),1==n.prevAllClasses&&e(this).prevAll().addClass("activePrev")},function(){1==n.parentBgColourChange&&i.removeClass("activeHovering"),jQuery(s).removeClass("active"),jQuery(this).removeClass("hovered"),1==n.prevAllClasses&&jQuery(this).prevAll().removeClass("activePrev")})})}else console.log("error! parent element contains something other than a div or li.")})}};return e.fn.activeHoverStates=function(i){return t[i]?t[i].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof i&&i?(e.error("Error!"),void 0):t.init.apply(this,arguments)},this}(jQuery);